{"ast":null,"code":"var _jsxFileName = \"/Users/mihaiadrianmircea/Documents/Facultate/LTW/Proiect/frontend1/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"username: \", username);\n    console.log(\"password: \", password);\n\n    // fetch local host port 8000, route /login\n    fetch(\"http://localhost:8000/api/user/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Network response was not ok.\");\n      }\n    }).then(response => {\n      localStorage.setItem(\"token\", response.token);\n      console.log(\"token: \", response.token);\n    }).catch(error => console.log(error.message));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","Login","username","setUsername","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","console","log","fetch","method","body","JSON","stringify","then","response","ok","json","Error","localStorage","setItem","token","catch","error","message","e","target","value"],"sources":["/Users/mihaiadrianmircea/Documents/Facultate/LTW/Proiect/frontend1/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\"\n\nexport default function Login() {\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"username: \", username);\n    console.log(\"password: \", password);\n\n    // fetch local host port 8000, route /login\n    fetch(\"http://localhost:8000/api/user/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        \"username\": username,\n        \"password\": password,\n      }),\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Network response was not ok.\");\n      }\n    }\n    ).then((response) => {\n      localStorage.setItem(\"token\", response.token);\n      console.log(\"token: \", response.token);\n    }\n    ).catch((error) => console.log(error.message));\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n\n  );\n\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}