{"ast":null,"code":"var _jsxFileName = \"/Users/mihaiadrianmircea/Documents/Facultate/LTW/Proiect/frontend1/src/components/Person.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Sidenav from \"./Sidenav\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Item from \"@material-ui/core\";\nimport \"./Person.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:8000/api/person\";\nconst buttonStyle = {\n  backgroundColor: \"#20df7f\",\n  border: \"none\",\n  color: \"white\",\n  fontFamily: \"Lexend Deca, sans-serif\",\n  textAlign: \"center\",\n  textDecoration: \"none\",\n  fontSize: \"16px\",\n  fontWeight: 600,\n  marginLeft: \"10px\",\n  marginRight: \"10px\",\n  marginTop: \"10px\",\n  cursor: \"pointer\"\n};\nexport default function PersonPage() {\n  _s();\n  const [persons, setPersons] = useState([]);\n  var page = 0;\n  var no_per_page = 10;\n  const fetchPersons = () => {\n    fetch(url + \"/get/\" + page + \"/\" + no_per_page, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(res => res.json()).then(data => {\n      setPersons(data);\n    });\n  };\n  useEffect(() => {\n    fetchPersons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PersonsPage\",\n    children: [/*#__PURE__*/_jsxDEV(Sidenav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: buttonStyle,\n        children: \"Add new person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: persons.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: persons.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: person.first_name\n          }, person.person_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 12\n        },\n        children: Array.from(Array(6)).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 2,\n          sm: 4,\n          md: 4\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(PersonPage, \"3dL94kAggHNyJLHmh8hlLChOUrQ=\");\n_c = PersonPage;\nvar _c;\n$RefreshReg$(_c, \"PersonPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidenav","Button","Grid","Item","url","buttonStyle","backgroundColor","border","color","fontFamily","textAlign","textDecoration","fontSize","fontWeight","marginLeft","marginRight","marginTop","cursor","PersonPage","persons","setPersons","page","no_per_page","fetchPersons","fetch","method","headers","Accept","Authorization","localStorage","getItem","then","res","json","data","length","map","person","first_name","person_id","xs","md","sm","Array","from","_","index"],"sources":["/Users/mihaiadrianmircea/Documents/Facultate/LTW/Proiect/frontend1/src/components/Person.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Sidenav from \"./Sidenav\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Item from \"@material-ui/core\"\nimport \"./Person.css\";\nconst url = \"http://localhost:8000/api/person\";\n\nconst buttonStyle= {\n    backgroundColor: \"#20df7f\",\n    border: \"none\",\n    color: \"white\",\n    fontFamily: \"Lexend Deca, sans-serif\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    fontSize: \"16px\",\n    fontWeight: 600,\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    cursor: \"pointer\"\n}\n\nexport default function PersonPage() {\n    const [persons, setPersons] = useState([]);\n    var page = 0;\n    var no_per_page = 10;\n    \n    const fetchPersons = () => {\n        fetch(url + \"/get/\" + page + \"/\" + no_per_page,{\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            }\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            setPersons(data);\n        });\n    }\n    useEffect(() => {\n        fetchPersons()\n    }, [])\n\n    return (\n        <div className=\"PersonsPage\">\n            <Sidenav/>\n            <main>\n                <Button variant=\"contained\" style={buttonStyle} >Add new person</Button>\n                {/* <Button variant=\"contained\" style={buttonStyle} onClick={fetchPersons}>Show all</Button> */}\n                <div>\n                  {persons.length > 0 && (\n                    <ul>\n                      {persons.map(person => (\n                        <li key={person.person_id}>{person.first_name}</li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n\n                <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n                    {\n                    Array.from(Array(6)).map((_, index) => (\n                        <Grid xs={2} sm={4} md={4} key={index}>\n                            \n                        </Grid>\n                    ))\n                    }\n                </Grid>\n            </main>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}